# Default server configuration for Pro-Mata Frontend
server {
    listen 3000;
    listen [::]:3000;
    server_name _;
    
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Security headers specific to this server
    add_header X-Served-By "Pro-Mata Frontend" always;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Try pre-compressed files first
        location ~* \.(js|css)$ {
            gzip_static on;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Fallback to regular file
        try_files $uri $uri/ =404;
    }
    
    # API proxy (if needed for development)
    location /api/ {
        # Apply rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Remove trailing slash and proxy to backend
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://backend:8080;
    }
    
    # Manifest and service worker
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type application/manifest+json;
    }
    
    location /sw.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Main application - SPA routing
    location / {
        # Apply general rate limiting
        limit_req zone=general burst=5 nodelay;
        
        # Security headers for HTML pages
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Cache control for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Try file, then directory, then fallback to index.html for SPA
        try_files $uri $uri/ /index.html;
    }
    
    # Specific handling for index.html
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # Inject environment variables if needed
        sub_filter_once off;
        sub_filter_types text/html;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /(?:uploads|files)/.*\.(?:php|pl|py|jsp|asp|sh|cgi)$ {
        return 403;
    }
    
    # Block common exploits
    location ~* (?:base64_encode|base64_decode|encode_decode) {
        return 403;
    }
    
    location ~* (?:eval\(|union.*select|concat.*\(|insert.*into) {
        return 403;
    }
    
    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Logging
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
}