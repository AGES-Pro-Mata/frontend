# Ultra-secure multi-stage build with minimal attack surface
# Stage 1: Build stage using minimal Alpine image
FROM node:22.12.0-alpine3.21 AS builder

# Update packages and install only essential build dependencies
RUN apk update && \
    apk upgrade --no-cache && \
    apk add --no-cache \
    ca-certificates \
    dumb-init \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/* \
    && rm -rf /var/lib/apt/lists/*

# Create unprivileged user
RUN addgroup -g 10001 -S nonroot && \
    adduser -S -D -H -u 10001 -s /sbin/nologin -G nonroot nonroot

# Set working directory
WORKDIR /app

# Set ownership of /app
RUN chown -R nonroot:nonroot /app

USER nonroot

# Copy package files
COPY --chown=nonroot:nonroot package*.json ./
COPY --chown=nonroot:nonroot tsconfig.json ./
COPY --chown=nonroot:nonroot vite.config.ts ./
COPY --chown=nonroot:nonroot tailwind.config.js ./
COPY --chown=nonroot:nonroot postcss.config.js ./

# Install dependencies as root, then switch user
USER root
RUN npm ci \
    --prefer-offline \
    --no-audit \
    --no-fund \
    --ignore-scripts

# Copy source code
COPY --chown=nonroot:nonroot public ./public
COPY --chown=nonroot:nonroot src ./src
COPY --chown=nonroot:nonroot index.html ./

# Switch to nonroot for build
USER nonroot

# Build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Set build environment
ENV NODE_ENV=production \
    VITE_BUILD_DATE=$BUILD_DATE \
    VITE_VCS_REF=$VCS_REF \
    VITE_VERSION=$VERSION

# Build the application
RUN npm run generate:routes
RUN npm run build

# Stage 2: Production stage using distroless nginx
FROM cgr.dev/chainguard/nginx:latest AS production

# Copy built application
COPY --from=builder --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Copy secure nginx configuration
COPY --chown=nginx:nginx nginx-secure.conf /etc/nginx/nginx.conf

# Build arguments for labels
ARG BUILD_DATE
ARG VCS_REF  
ARG VERSION

# Add security-focused labels
LABEL org.opencontainers.image.title="Pro-Mata Frontend" \
      org.opencontainers.image.description="Ultra-secure production frontend" \
      org.opencontainers.image.version=${VERSION} \
      org.opencontainers.image.created=${BUILD_DATE} \
      org.opencontainers.image.revision=${VCS_REF} \
      org.opencontainers.image.vendor="Pro-Mata Team" \
      org.opencontainers.image.licenses="MIT" \
      security.scan="enabled" \
      security.distroless="true"

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Use distroless entrypoint (nginx user is already configured)
ENTRYPOINT ["/usr/sbin/nginx"]
CMD ["-g", "daemon off;"]
